# Docker

# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '0865a45c-6a20-41e2-8b5a-216129a7f64c'
  imageRepository: 'tractionsample'
  containerRegistry: 'tractionsample.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  k8sServiceConnection: 
  k8sNamespace: default
  appSecret: traction-sample
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: test
  jobs:
  - job: test
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: 'test'
        projects: 'test/Server.Test'
        testRunTitle: 'test'
- stage: build
  jobs:  
  - job: build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: docker build
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'manifests'
        path: 'manifests'
- stage: deploy
  dependsOn: build
  variables:
  - group: secrets
  jobs:
  - deployment: deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'tractionsample.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Create secret
            inputs:
              action: 'createSecret'
              namespace: '$(k8sNamespace)'
              secretType: 'generic'
              secretName: '$(appSecret)'
              secretArguments: '--from-literal=client-id=$(clientid) --from-literal=service-bus-connection-string=$(servicebusconnectionstring)'
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'tractionsample-tractionsample-default-1594781404476'
              namespace: '$(k8sNamespace)'
              manifests: |
                $(System.ArtifactsDirectory)/manifests/deployment.yml
                $(System.ArtifactsDirectory)/manifests/service.yml
                $(System.ArtifactsDirectory)/manifests/ingress.yml
                $(System.ArtifactsDirectory)/manifests/certificate.yml
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
    
